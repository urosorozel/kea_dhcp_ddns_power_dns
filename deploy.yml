- name: Ubuntu 16 support
  hosts: all
  user: ubuntu
  gather_facts: false
  vars:
    http_proxy:
  pre_tasks:
  - name: Install python2 for Ansible
    raw: bash -c "test -e /usr/bin/python || ( export http_proxy={{http_proxy}};apt -qqy update && apt install -qqy python-minimal python2.7)"
    register: output
    changed_when:
    - output.stdout != ""
    - output.stdout != "\r\n"
  - name: Gathering Facts
    setup:

  tasks:
  - name: Create a new file for APT config
    file: path=/etc/apt/apt.conf.d/10disable-auto-apt  state=touch

  - name: Disable Automatic APT
    lineinfile:
      dest: /etc/apt/apt.conf.d/10disable-auto-apt
      line: 'APT::Periodic::Enable "0";'
      state: present

  - name: Install PIP support
    apt:
      name: "{{ item }}"
    with_items:
      - mariadb-server
      - python-pip
      - python-setuptools
      - default-libmysqlclient-dev
      - build-essential
      - python-dev

  - name: Install MySQL-python
    pip:
      name: MySQL-python


- hosts: dhcp_servers 
  user: ubuntu
  gather_facts: True
  vars:
    domain_name: ipmi.dyn.zone.net
    rev_domain_name: 10.168.192.in-addr.arpa
    dhcpupdate_tsig_key_name: dhcpupdate
    dhcpupdate_tsig_key: uwl4ytmI2Mt8MmjkvtmEpFu53nmib7dpe8Hkw169O7c=
    dnsaxfr_tsig_key_name: dnsaxfr
    dnsaxfr_tsig_key: FVBAqembIQSCNecZUpithDSOxto0uvAZTwORiY+RSIM=
    pdns_webserver_address: "0.0.0.0"
    pdns_webserver_port: 8081
    pdns_webserver_password: changeme
    pdns_webserver_allow_from: "{{ ansible_ens3.ipv4.network }}/24,10.184.229.110/32,172.29.248.100/32"
    pdns_api_key: changeme
  tasks:
    - name: Install powerdns
      apt: 
        name: "{{ item }}"
        state: present
      environment:
        DEBIAN_FRONTEND: noninteractive
      with_items:
        - pdns-server
        - pdns-backend-mysql
        - pdns-tools


    - name: Check for zones
      shell: |
        pdnsutil list-all-zones
      register: pdns_zones

    - name: Run pdnsutil
      shell: |
        pdnsutil create-zone {{ domain_name }} ns1.{{ domain_name }}
        pdnsutil create-zone  {{ rev_domain_name }} ns1.{{ domain_name }}
        pdnsutil add-record {{ domain_name }} ns1 A {{ hostvars['dhcp-server1']['ansible_default_ipv4']['address'] }} 
        pdnsutil add-record {{ domain_name }} . NS  ns2.{{ domain_name }}
        pdnsutil add-record {{ domain_name }} ns2 A {{ hostvars['dhcp-server2']['ansible_default_ipv4']['address'] }}
        pdnsutil add-record {{ rev_domain_name }} . NS  ns2.{{ domain_name }}
        pdnsutil import-tsig-key {{ dhcpupdate_tsig_key_name }} hmac-md5 {{ dhcpupdate_tsig_key }} 
        pdnsutil import-tsig-key {{ dnsaxfr_tsig_key_name }} hmac-md5 {{ dnsaxfr_tsig_key }}
        pdnsutil set-meta {{ domain_name }} ALLOW-DNSUPDATE-FROM {{ ansible_ens3.ipv4.network }}/24 {{ ansible_ens4.ipv4.network }}/24 
        pdnsutil set-meta {{ domain_name }} TSIG-ALLOW-DNSUPDATE dhcpupdate
        pdnsutil set-meta {{ domain_name }} TSIG-ALLOW-AXFR dnsaxfr
        pdnsutil set-meta {{ rev_domain_name }} ALLOW-DNSUPDATE-FROM {{ ansible_ens3.ipv4.network }}/24 {{ ansible_ens4.ipv4.network }}/24
        pdnsutil set-meta {{ rev_domain_name }} TSIG-ALLOW-DNSUPDATE dhcpupdate
        pdnsutil set-meta {{ rev_domain_name }} TSIG-ALLOW-AXFR dnsaxfr
        # notify
        pdnsutil activate-tsig-key {{ domain_name }} dhcpupdate  master
        pdnsutil activate-tsig-key {{ domain_name }} dnsaxfr master
        pdnsutil activate-tsig-key {{ rev_domain_name }} dhcpupdate  master
        pdnsutil activate-tsig-key {{ rev_domain_name }} dnsaxfr master
        pdnsutil set-meta {{ domain_name }} NOTIFY-DNSUPDATE 1
        pdnsutil set-meta {{ rev_domain_name }} NOTIFY-DNSUPDATE 1
        pdnsutil set-kind {{ domain_name }} MASTER
        pdnsutil set-kind {{ rev_domain_name }} MASTER
      when: "'master' in group_names and domain_name not in pdns_zones.stdout"

    - name: MArk as slave server
      lineinfile:
        path: /etc/powerdns/pdns.conf
        regexp: '^# slave='
        insertafter: '^# slave='
        line: 'slave=yes'
      when: "'slave' in group_names"

    - name: Run pdnsutil
      shell: |
        pdnsutil create-slave-zone {{ domain_name }} {{ hostvars['dhcp-server1']['ansible_default_ipv4']['address'] }}
        pdnsutil create-slave-zone {{ rev_domain_name }} {{ hostvars['dhcp-server1']['ansible_default_ipv4']['address'] }}
        pdnsutil import-tsig-key {{ dhcpupdate_tsig_key_name }} hmac-md5 {{ dhcpupdate_tsig_key }}
        pdnsutil import-tsig-key {{ dnsaxfr_tsig_key_name }} hmac-md5 {{ dnsaxfr_tsig_key }}
        sleep 2
        pdnsutil activate-tsig-key {{ domain_name }} dnsaxfr slave
        pdnsutil activate-tsig-key {{ rev_domain_name }} dnsaxfr slave
        pdnsutil set-kind {{ domain_name }} SLAVE
        pdnsutil set-kind {{ rev_domain_name }} SLAVE
      when: "'slave' in group_names and domain_name not in pdns_zones.stdout"

    - name: Enable pDNS API
      block:
        - lineinfile:
            path: /etc/powerdns/pdns.conf
            regexp: '^webserver='
            insertafter: '^# webserver='
            line: 'webserver=yes'
    
        - lineinfile:
            path: /etc/powerdns/pdns.conf
            regexp: '^webserver-address='
            insertafter: '^# webserver-address='
            line: 'webserver-address={{ pdns_webserver_address }}'
    
        - lineinfile:
            path: /etc/powerdns/pdns.conf
            regexp: '^webserver-password='
            insertafter: '^# webserver-password='
            line: 'webserver-password={{ pdns_webserver_password }}'
    
        - lineinfile:
            path: /etc/powerdns/pdns.conf
            regexp: '^webserver-port='
            insertafter: '^# webserver-port='
            line: 'webserver-port={{ pdns_webserver_port }}'
    
        - lineinfile:
            path: /etc/powerdns/pdns.conf
            regexp: '^webserver-allow-from='
            insertafter: '^# webserver-allow-from='
            line: 'webserver-allow-from={{ pdns_webserver_allow_from }}'
    
        - lineinfile:
            path: /etc/powerdns/pdns.conf
            regexp: '^api='
            insertafter: '^# api='
            line: 'api=yes'
    
        - lineinfile:
            path: /etc/powerdns/pdns.conf
            regexp: '^api-key='
            insertafter: '^# api-key='
            line: 'api-key={{ pdns_api_key }}'

        - lineinfile:
            path: /etc/powerdns/pdns.conf
            regexp: '^dnsupdate='
            insertafter: '^# dnsupdate='
            line: 'dnsupdate=yes'
      when: "'master' in group_names"

- hosts: dhcp-server1
  user: ubuntu
  vars:
  tags: 
   - dns1
  tasks:
    - name: Install Kea
      apt:
        name: "{{  item }}"
      with_items:
        - kea-dhcp4-server
        - kea-admin
        - kea-dhcp-ddns-server

    - name: Kea DHCP config
      template:
        src: templates/kea-dhcp4.conf.j2
        dest: /etc/kea/kea-dhcp4.conf

    - name: Kea DHCP DDNS config
      template:
        src: templates/kea-dhcp-ddns.conf.j2
        dest: /etc/kea/kea-dhcp-ddns.conf

    - name: Stop systemd-resolved.service
      systemd:
        name: systemd-resolved
        state: stopped

    - name: Restart pdns service
      systemd:
        name: pdns
        state: restarted

